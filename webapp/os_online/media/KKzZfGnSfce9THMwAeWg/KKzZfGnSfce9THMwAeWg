// This is the statically generated Javascript code for an OpenSesame Script.

utils.canvasInit(1024, 768);
var CANVAS = new fabric.StaticCanvas("canvas");

globalVars=[];
globalVars["expyriment_opengl"] = "no";
globalVars["foreground"] = "white";
globalVars["subject_parity"] = "even";
globalVars["description"] = "Default description";
globalVars["title"] = "New experiment";
globalVars["compensation"] = "0";
globalVars["coordinates"] = "relative";
globalVars["height"] = "768";
globalVars["mouse_backend"] = "xpyriment";
globalVars["width"] = "1024";
globalVars["sampler_backend"] = "legacy";
globalVars["keyboard_backend"] = "legacy";
globalVars["background"] = "black";
globalVars["subject_nr"] = "0";
globalVars["canvas_backend"] = "xpyriment";
globalVars["start"] = "experiment";
globalVars["synth_backend"] = "legacy";

//  Generated by OpenSesame 0.27.4 (Frisky Freud)
//  Wed Oct  8 12:03:48 2014 (posix)
//  <http://www.cogsci.nl/opensesame>

var JS__text_display111 = new text_display("__text_display111", "white", "40", "center", "Press 'a' for verb. Press 'z' for noun.\nPress any key to start.", "black", "keypress", "mono");
//	Unused features:
//	description = Presents a display consisting of text,
//	maxchar = 50

var JStext_display_1 = new text_display("text_display_1", "white", "40", "center", "Welcome to the OpenSesame live demo.\nPress any key to start.", "black", "keypress", "mono");
//	Unused features:
//	description = Presents a display consisting of text,
//	maxchar = 50
var feedback_fixdot_0 = new fixdot("0", "0", "green", "true");
var JSfeedback = new sketchpad("feedback", "1000", [feedback_fixdot_0]);
//	Unused features:
//	description = Displays stimuli
var sketchpad_arrow_0 = new arrow("0", "128", "320", "-128", "1", "blue", "10", "true");
var JSsketchpad = new sketchpad("sketchpad", "keypress", [sketchpad_arrow_0]);
//	Unused features:
//	description = Displays stimuli

var JSlog = new logger("log", undefined);
//	Unused features:
//	description = Logs experimental data
var red_fix_fixdot_0 = new fixdot("0", "0", "red", "true");
var JSred_fix = new sketchpad("red_fix", "500", [red_fix_fixdot_0]);
//	Unused features:
//	description = Displays stimuli,
//	start_response_interval = no
var sketchpad2_image_0 = new img("0", "0", "[picture]", "1", "1", "true");
var JSsketchpad2 = new sketchpad("sketchpad2", "0", [sketchpad2_image_0]);
//	Unused features:
//	description = Displays stimuli
var fixdotg_fixdot_0 = new fixdot("0", "0", "white", "true");
var JSfixdotg = new sketchpad("fixdotg", "1000", [fixdotg_fixdot_0]);
//	Unused features:
//	description = Displays stimuli
var fixation_fixdot_0 = new fixdot("0", "0", "white", "true");
var JSfixation = new sketchpad("fixation", "500", [fixation_fixdot_0]);
//	Unused features:
//	description = Displays stimuli,
//	start_response_interval = no

var JSkeyboard_response1 = new keyboard_response("keyboard_response1", "[cr]", undefined, "infinite");
//	Unused features:
//	description = Collects keyboard responses,
//	flush = yes
var feedbackwrong_fixdot_0 = new fixdot("0", "0", "red", "true");
var JSfeedbackwrong = new sketchpad("feedbackwrong", "1000", [feedbackwrong_fixdot_0]);
//	Unused features:
//	description = Displays stimuli
var word_textline_0 = new textline("0", "0", "[word]", "1", "white", "mono", "40", "no", "no", "true");
var JSword = new sketchpad("word", "0", [word_textline_0]);
//	Unused features:
//	description = Displays stimuli,
//	start_response_interval = no

var JS_keyboard_response = new keyboard_response("_keyboard_response", "[correct_resp]", "z;a", "infinite");
//	Unused features:
//	description = Collects keyboard responses,
//	flush = no

var JSgoodbye = new text_display("goodbye", "white", "28", "center", "FINISHED\n\nThe experiment is finished!", "black", "keypress", "mono");
//	Unused features:
//	description = Presents a display consisting of text,
//	maxchar = 50

var JS__text_display = new text_display("__text_display", "white", "40", "center", "Press 'a' if you see a dog. Press 'b' if you see a cat.\nPress any key to start.", "black", "keypress", "mono");
//	Unused features:
//	description = Presents a display consisting of text,
//	maxchar = 50
var green_fix_fixdot_0 = new fixdot("0", "0", "green", "true");
var JSgreen_fix = new sketchpad("green_fix", "500", [green_fix_fixdot_0]);
//	Unused features:
//	description = Displays stimuli,
//	start_response_interval = no


var JStrial_sequence = new sequence("trial_sequence", [JSfixation, JSword, JS_keyboard_response, JSred_fix, JSgreen_fix, JSlog], ["true", "true", "true", "[correct] == 0", "[correct] == 1", "true"]);
//	Unused features:
//	description = A single trial
var block_loop_cycle = [
	{
		"[word]" : "thing",
		"[word_valence]" : "neutral",
		"[word_type]" : "noun",
		"[correct_resp]" : "z",
	}, 
	{
		"[word]" : "happiness",
		"[word_valence]" : "positive",
		"[word_type]" : "noun",
		"[correct_resp]" : "z",
	}, 
	{
		"[word]" : "sadness",
		"[word_valence]" : "negative",
		"[word_type]" : "noun",
		"[correct_resp]" : "z",
	}, 
	{
		"[word]" : "do",
		"[word_valence]" : "neutral",
		"[word_type]" : "verb",
		"[correct_resp]" : "a",
	}, 
	{
		"[word]" : "rejoice",
		"[word_valence]" : "positive",
		"[word_type]" : "verb",
		"[correct_resp]" : "a",
	}, 
	{
		"[word]" : "grieve",
		"[word_valence]" : "negative",
		"[word_type]" : "verb",
		"[correct_resp]" : "a",
	}
];


var JSblock_loop = new loop("block_loop", 1, undefined, undefined, JStrial_sequence, "false", ["[word]", "[word_type]", "[word_valence]", "[correct_resp]"], 6, "random", block_loop_cycle);
//	Unused features:
//	description = A single block of trials,
//	item = trial_sequence

var JSsequence1 = new sequence("sequence1", [JSfixdotg, JSsketchpad2, JSkeyboard_response1, JSfeedback, JSfeedbackwrong, JSlog], ["true", "true", "true", "[correct] == 1", "[correct] == 0", "true"]);
var loop1_cycle = [
	{
		"[picture]" : "dog1.jpg",
		"[cr]" : "a",
	}, 
	{
		"[picture]" : "dog2.jpg",
		"[cr]" : "a",
	}, 
	{
		"[picture]" : "cat1.jpg",
		"[cr]" : "b",
	}, 
	{
		"[picture]" : "cat2.png",
		"[cr]" : "b",
	}
];


var JSloop1 = new loop("loop1", 1, undefined, undefined, JSsequence1, "false", ["[picture]", "[cr]"], 4, "random", loop1_cycle);
//	Unused features:
//	description = Repeatedly runs another item,
//	item = sequence1

var JSblock_sequence = new sequence("block_sequence", [JSblock_loop], ["true"]);
//	Unused features:
//	description = A sequence containging a single block of trials followed by feedback to the participant

var JSexperimental_loop = new loop("experimental_loop", 1, undefined, undefined, JSblock_sequence, undefined, [], 1, "random", undefined);
//	Unused features:
//	description = A loop containing one or more practice blocks,
//	item = block_sequence

var JSexperiment = new sequence("experiment", [JSsketchpad, JStext_display_1, JS__text_display, JSloop1, JS__text_display111, JSexperimental_loop, JSgoodbye], ["true", "true", "true", "true", "true", "true", "true"]);

//=========MASTER experiment==========
var _firstSeq_ = JSexperiment;
var MASTER = new Experiment(_firstSeq_);
$(window).bind('load', function() {
	$('#loader').remove();
	MASTER.run();
});